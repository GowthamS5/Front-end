{"ast":null,"code":"var _jsxFileName = \"C:\\\\HP\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport DashboardPage from './DashboardPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: LoginPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/dashboard\",\n        component: DashboardPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        from: \"/\",\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLogin = () => {\n    // Replace this with your actual login logic\n    // For demonstration purposes, we're setting isLoggedIn to true on successful login\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(PrivateRoute, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c2 = PrivateRoute;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Redirect","LoginPage","DashboardPage","jsxDEV","_jsxDEV","App","children","path","component","fileName","_jsxFileName","lineNumber","columnNumber","PrivateRoute","from","to","_c","Component","rest","_s","isLoggedIn","setIsLoggedIn","handleLogin","render","props","_c2","$RefreshReg$"],"sources":["C:/HP/app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport LoginPage from './LoginPage';\r\nimport DashboardPage from './DashboardPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <PrivateRoute path=\"/dashboard\" component={DashboardPage} />\r\n        <Redirect from=\"/\" to=\"/login\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    // Replace this with your actual login logic\r\n    // For demonstration purposes, we're setting isLoggedIn to true on successful login\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA,CAACP,MAAM;IAAAS,QAAA,eACLF,OAAA,CAACL,MAAM;MAAAO,QAAA,gBACLF,OAAA,CAACN,KAAK;QAACS,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAEP;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CR,OAAA,CAACS,YAAY;QAACN,IAAI,EAAC,YAAY;QAACC,SAAS,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DR,OAAA,CAACJ,QAAQ;QAACc,IAAI,EAAC,GAAG;QAACC,EAAE,EAAC;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACI,EAAA,GAVQX,GAAG;AAYZ,SAASQ,YAAYA,CAAC;EAAEL,SAAS,EAAES,SAAS;EAAE,GAAGC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM2B,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACAD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACEjB,OAAA,CAACN,KAAK;IAAA,GACAoB,IAAI;IACRK,MAAM,EAAGC,KAAK,IACZJ,UAAU,gBAAGhB,OAAA,CAACa,SAAS;MAAA,GAAKO;IAAK;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGR,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAChE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN;AAACO,EAAA,CAjBQN,YAAY;AAAAY,GAAA,GAAZZ,YAAY;AAmBrB,eAAeR,GAAG;AAAC,IAAAW,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}