{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\EmployeePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeDetailsPage() {\n  _s();\n  const navigate = useNavigate();\n  const employeeId = localStorage.getItem('employeeId'); // Retrieve employee ID from local storage\n  const [employeeDetails, setEmployeeDetails] = useState(null);\n  useEffect(() => {\n    if (!employeeId) {\n      // Handle the case where the employee ID is not found in local storage\n      console.error('Employee ID not found in local storage');\n      navigate('/'); // Redirect to the login page or handle it differently\n      return;\n    }\n    fetch(`http://localhost:3001/employees/${employeeId}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch employee details');\n      }\n      return response.json();\n    }).then(data => {\n      setEmployeeDetails(data);\n    }).catch(error => {\n      console.error('Error fetching employee details:', error);\n    });\n  }, [employeeId]);\n  const clickUpdateEmployee = () => {\n    navigate(`/update-employee/${employeeId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), employeeDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hoihouh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", employeeDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Employee ID: \", employeeDetails.employeeId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-button\",\n        onClick: clickUpdateEmployee,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeDetailsPage, \"xTORSfnn7eYwi3wlmJiooYgzKnM=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeDetailsPage;\nexport default EmployeeDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","EmployeeDetailsPage","_s","navigate","employeeId","localStorage","getItem","employeeDetails","setEmployeeDetails","console","error","fetch","then","response","ok","Error","json","data","catch","clickUpdateEmployee","children","fileName","_jsxFileName","lineNumber","columnNumber","name","className","onClick","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/EmployeePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction EmployeeDetailsPage() {\r\n  const navigate = useNavigate();\r\n  const employeeId = localStorage.getItem('employeeId'); // Retrieve employee ID from local storage\r\n  const [employeeDetails, setEmployeeDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!employeeId) {\r\n      // Handle the case where the employee ID is not found in local storage\r\n      console.error('Employee ID not found in local storage');\r\n      navigate('/'); // Redirect to the login page or handle it differently\r\n      return;\r\n    }\r\n\r\n    fetch(`http://localhost:3001/employees/${employeeId}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch employee details');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setEmployeeDetails(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching employee details:', error);\r\n      });\r\n  }, [employeeId]);\r\n\r\n  const clickUpdateEmployee = () => {\r\n    navigate(`/update-employee/${employeeId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Employee Details</h2>\r\n      {employeeDetails ? (\r\n        <div><h1>hoihouh</h1>\r\n          <p>Name: {employeeDetails.name}</p>\r\n          <p>Employee ID: {employeeDetails.employeeId}</p>\r\n          <button className=\"update-button\" onClick={clickUpdateEmployee}>\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeDetailsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;EACvD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,UAAU,EAAE;MACf;MACAK,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;MACvDP,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACf;IACF;IAEAQ,KAAK,CAAE,mCAAkCP,UAAW,EAAC,CAAC,CACnDQ,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;MACrD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdT,kBAAkB,CAACS,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAER,KAAK,IAAK;MAChBD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,MAAMe,mBAAmB,GAAGA,CAAA,KAAM;IAChChB,QAAQ,CAAE,oBAAmBC,UAAW,EAAC,CAAC;EAC5C,CAAC;EAED,oBACEJ,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBjB,eAAe,gBACdP,OAAA;MAAAoB,QAAA,gBAAKpB,OAAA;QAAAoB,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBxB,OAAA;QAAAoB,QAAA,GAAG,QAAM,EAACb,eAAe,CAACkB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCxB,OAAA;QAAAoB,QAAA,GAAG,eAAa,EAACb,eAAe,CAACH,UAAU;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDxB,OAAA;QAAQ0B,SAAS,EAAC,eAAe;QAACC,OAAO,EAAER,mBAAoB;QAAAC,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENxB,OAAA;MAAAoB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CAhDQD,mBAAmB;EAAA,QACTH,WAAW;AAAA;AAAA8B,EAAA,GADrB3B,mBAAmB;AAkD5B,eAAeA,mBAAmB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}