{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\UpdateEmployeePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateEmployeePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [employeeData, setEmployeeData] = useState({\n    first_name: '',\n    last_name: '',\n    department: '',\n    salary: ''\n  });\n  const [image, setImage] = useState(null);\n  const imageInputRef = useRef();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEmployeeData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setImage(file);\n  };\n  const validateForm = () => {\n    // Basic validation: Check if required fields are not empty\n    if (!employeeData.first_name || !employeeData.last_name || !employeeData.department || !employeeData.salary) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Validation Error',\n        text: 'All fields are required.'\n      });\n      return false;\n    }\n    return true;\n  };\n  const handleUpdateEmployee = () => {\n    if (!validateForm()) {\n      return; // Don't proceed if validation fails\n    }\n\n    const formData = new FormData();\n    formData.append('first_name', employeeData.first_name);\n    formData.append('last_name', employeeData.last_name);\n    formData.append('department', employeeData.department);\n    formData.append('salary', employeeData.salary);\n    if (image) {\n      formData.append('profile', image);\n    }\n    fetch(`http://localhost:3001/employees/${id}`, {\n      method: 'PUT',\n      body: formData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Error updating employee');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Employee updated:', data);\n      navigate('/dashboard');\n      Swal.fire({\n        icon: 'success',\n        title: 'Employee Updated Successfully!',\n        showConfirmButton: false,\n        timer: 2500\n      });\n    }).catch(error => {\n      console.error('Error updating employee:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"first_name\",\n        placeholder: \"First Name\",\n        value: employeeData.first_name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"last_name\",\n        placeholder: \"Last Name\",\n        value: employeeData.last_name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"department\",\n        placeholder: \"Department\",\n        value: employeeData.department,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"salary\",\n        placeholder: \"Salary\",\n        value: employeeData.salary,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: imageInputRef,\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateEmployee,\n        children: \"Update Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateEmployeePage, \"+ekO0lDMZJb99s7ongFv5FvcXBA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateEmployeePage;\nexport default UpdateEmployeePage;\nvar _c;\n$RefreshReg$(_c, \"UpdateEmployeePage\");","map":{"version":3,"names":["React","useState","useRef","useParams","useNavigate","Swal","jsxDEV","_jsxDEV","UpdateEmployeePage","_s","id","navigate","employeeData","setEmployeeData","first_name","last_name","department","salary","image","setImage","imageInputRef","handleInputChange","e","name","value","target","prevData","handleImageChange","file","files","validateForm","fire","icon","title","text","handleUpdateEmployee","formData","FormData","append","fetch","method","body","then","response","ok","Error","json","data","console","log","showConfirmButton","timer","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","accept","ref","onClick","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/UpdateEmployeePage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction UpdateEmployeePage() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [employeeData, setEmployeeData] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    department: '',\r\n    salary: '',\r\n  });\r\n\r\n  const [image, setImage] = useState(null);\r\n  const imageInputRef = useRef();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEmployeeData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setImage(file);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    // Basic validation: Check if required fields are not empty\r\n    if (\r\n      !employeeData.first_name ||\r\n      !employeeData.last_name ||\r\n      !employeeData.department ||\r\n      !employeeData.salary\r\n    ) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Validation Error',\r\n        text: 'All fields are required.',\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleUpdateEmployee = () => {\r\n    if (!validateForm()) {\r\n      return; // Don't proceed if validation fails\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('first_name', employeeData.first_name);\r\n    formData.append('last_name', employeeData.last_name);\r\n    formData.append('department', employeeData.department);\r\n    formData.append('salary', employeeData.salary);\r\n    if (image) {\r\n      formData.append('profile', image);\r\n    }\r\n\r\n    fetch(`http://localhost:3001/employees/${id}`, {\r\n      method: 'PUT',\r\n      body: formData,\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Error updating employee');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Employee updated:', data);\r\n        navigate('/dashboard');\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Employee Updated Successfully!',\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating employee:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update Employee</h2>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"first_name\"\r\n          placeholder=\"First Name\"\r\n          value={employeeData.first_name}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"last_name\"\r\n          placeholder=\"Last Name\"\r\n          value={employeeData.last_name}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"department\"\r\n          placeholder=\"Department\"\r\n          value={employeeData.department}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"salary\"\r\n          placeholder=\"Salary\"\r\n          value={employeeData.salary}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          ref={imageInputRef}\r\n          onChange={handleImageChange}\r\n        />\r\n        <button onClick={handleUpdateEmployee}>Update Employee</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateEmployeePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}