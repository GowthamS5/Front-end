{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\EmployeePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeePage() {\n  _s();\n  const [employeeDetails, setEmployeeDetails] = useState({});\n  useEffect(() => {\n    // Fetch employee details from the backend API\n    fetchEmployeeDetails();\n  }, []);\n  const fetchEmployeeDetails = async () => {\n    try {\n      // Make an API request to get employee details\n      const response = await fetch('http://localhost:3001/employees/all', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('employeeToken')}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setEmployeeDetails(data);\n      } else {\n        console.error('Failed to fetch employee details');\n      }\n    } catch (error) {\n      console.error('Error fetching employee details:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \" \", employeeDetails.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" \", employeeDetails.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeePage, \"Yr1OQ6nDFORf53i5bwdwdxJSiuI=\");\n_c = EmployeePage;\nexport default EmployeePage;\nvar _c;\n$RefreshReg$(_c, \"EmployeePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmployeePage","_s","employeeDetails","setEmployeeDetails","fetchEmployeeDetails","response","fetch","headers","Authorization","localStorage","getItem","ok","data","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/EmployeePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction EmployeePage() {\r\n  const [employeeDetails, setEmployeeDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Fetch employee details from the backend API\r\n    fetchEmployeeDetails();\r\n  }, []);\r\n\r\n  const fetchEmployeeDetails = async () => {\r\n    try {\r\n      // Make an API request to get employee details\r\n      const response = await fetch('http://localhost:3001/employees/all', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('employeeToken')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEmployeeDetails(data);\r\n      } else {\r\n        console.error('Failed to fetch employee details');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching employee details:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Employee Dashboard</h2>\r\n      {/* Display employee details here */}\r\n      <div>\r\n        <strong>Name:</strong> {employeeDetails.name}\r\n      </div>\r\n      <div>\r\n        <strong>Email:</strong> {employeeDetails.email}\r\n      </div>\r\n      {/* Add more details as needed */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd;IACAO,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAE;QACjE;MACF,CAAC,CAAC;MAEF,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCV,kBAAkB,CAACS,IAAI,CAAC;MAC1B,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3BrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAClB,eAAe,CAACmB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACNrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAClB,eAAe,CAACoB,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACnB,EAAA,CAzCQD,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA2CrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}