{"ast":null,"code":"var _jsxFileName = \"C:\\\\HP\\\\app\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const LoginAction = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.SECRET}`\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        console.log('JWT Token is:', data.token);\n        navigate('/dashboard');\n      } else {\n        console.error('Login failed');\n        Swal.fire({\n          icon: 'error',\n          title: 'Login Failed',\n          text: 'Invalid username or password'\n        });\n      }\n    } catch (error) {\n      console.error('Error login:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'An error occurred while trying to log in'\n      });\n    }\n  };\n  const RegisterAction = async () => {\n    const {\n      value: formValues\n    } = await Swal.fire({\n      title: 'Register',\n      html: '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Username\">' + '<input type=\"password\" id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Password\">',\n      focusConfirm: false,\n      preConfirm: () => {\n        const username = Swal.getPopup().querySelector('#swal-input1').value;\n        const password = Swal.getPopup().querySelector('#swal-input2').value;\n        return {\n          username,\n          password\n        };\n      }\n    });\n    if (formValues && formValues.username && formValues.password) {\n      try {\n        const response = await fetch('http://localhost:3001/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formValues)\n        });\n        if (response.ok) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Registration Successful',\n            text: 'You can now log in with your new account'\n          });\n        } else {\n          console.error('Registration failed');\n          Swal.fire({\n            icon: 'error',\n            title: 'Registration Failed',\n            text: 'Failed to register. Please try again later.'\n          });\n        }\n      } catch (error) {\n        console.error('Error registering:', error);\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'An error occurred while trying to register'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: LoginAction,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: RegisterAction,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"EgYjDAoSBrLcIIdUzvjslMz3nCA=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Swal","jsxDEV","_jsxDEV","LoginPage","_s","navigate","username","setUsername","password","setPassword","LoginAction","response","fetch","method","headers","process","env","SECRET","body","JSON","stringify","ok","data","json","localStorage","setItem","token","console","log","error","fire","icon","title","text","RegisterAction","value","formValues","html","focusConfirm","preConfirm","getPopup","querySelector","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/HP/app/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport Swal from 'sweetalert2'; \r\n\r\nfunction LoginPage() {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const LoginAction = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3001/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${process.env.SECRET}`\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                localStorage.setItem('token', data.token);\r\n                console.log('JWT Token is:', data.token);\r\n                navigate('/dashboard');\r\n            } else {\r\n                console.error('Login failed');\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Login Failed',\r\n                    text: 'Invalid username or password',\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error login:', error);\r\n            \r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'An error occurred while trying to log in',\r\n            });\r\n        }\r\n    };\r\n\r\n    const RegisterAction = async () => {\r\n        const { value: formValues } = await Swal.fire({\r\n            title: 'Register',\r\n            html:\r\n                '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Username\">' +\r\n                '<input type=\"password\" id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Password\">',\r\n            focusConfirm: false,\r\n            preConfirm: () => {\r\n                const username = Swal.getPopup().querySelector('#swal-input1').value;\r\n                const password = Swal.getPopup().querySelector('#swal-input2').value;\r\n                return { username, password };\r\n            },\r\n        });\r\n\r\n        if (formValues && formValues.username && formValues.password) {\r\n            try {\r\n                const response = await fetch('http://localhost:3001/register', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formValues),\r\n                });\r\n\r\n                if (response.ok) {\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Registration Successful',\r\n                        text: 'You can now log in with your new account',\r\n                    });\r\n                } else {\r\n                    console.error('Registration failed');\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Registration Failed',\r\n                        text: 'Failed to register. Please try again later.',\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error registering:', error);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'An error occurred while trying to register',\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h2>Login</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={LoginAction}>Login</button>\r\n            <button onClick={RegisterAction}>Register</button> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iBAAiB;AACxB,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASC,OAAO,CAACC,GAAG,CAACC,MAAO;QAClD,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,QAAQ;UAAEE;QAAS,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACU,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;QACzCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,IAAI,CAACI,KAAK,CAAC;QACxCrB,QAAQ,CAAC,YAAY,CAAC;MAC1B,CAAC,MAAM;QACHsB,OAAO,CAACE,KAAK,CAAC,cAAc,CAAC;QAC7B7B,IAAI,CAAC8B,IAAI,CAAC;UACNC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,cAAc;UACrBC,IAAI,EAAE;QACV,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MAEpC7B,IAAI,CAAC8B,IAAI,CAAC;QACNC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACV,CAAC,CAAC;IACN;EACJ,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM;MAAEC,KAAK,EAAEC;IAAW,CAAC,GAAG,MAAMpC,IAAI,CAAC8B,IAAI,CAAC;MAC1CE,KAAK,EAAE,UAAU;MACjBK,IAAI,EACA,qEAAqE,GACrE,qFAAqF;MACzFC,YAAY,EAAE,KAAK;MACnBC,UAAU,EAAEA,CAAA,KAAM;QACd,MAAMjC,QAAQ,GAAGN,IAAI,CAACwC,QAAQ,CAAC,CAAC,CAACC,aAAa,CAAC,cAAc,CAAC,CAACN,KAAK;QACpE,MAAM3B,QAAQ,GAAGR,IAAI,CAACwC,QAAQ,CAAC,CAAC,CAACC,aAAa,CAAC,cAAc,CAAC,CAACN,KAAK;QACpE,OAAO;UAAE7B,QAAQ;UAAEE;QAAS,CAAC;MACjC;IACJ,CAAC,CAAC;IAEF,IAAI4B,UAAU,IAAIA,UAAU,CAAC9B,QAAQ,IAAI8B,UAAU,CAAC5B,QAAQ,EAAE;MAC1D,IAAI;QACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC3DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACgB,UAAU;QACnC,CAAC,CAAC;QAEF,IAAIzB,QAAQ,CAACU,EAAE,EAAE;UACbrB,IAAI,CAAC8B,IAAI,CAAC;YACNC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,yBAAyB;YAChCC,IAAI,EAAE;UACV,CAAC,CAAC;QACN,CAAC,MAAM;UACHN,OAAO,CAACE,KAAK,CAAC,qBAAqB,CAAC;UACpC7B,IAAI,CAAC8B,IAAI,CAAC;YACNC,IAAI,EAAE,OAAO;YACbC,KAAK,EAAE,qBAAqB;YAC5BC,IAAI,EAAE;UACV,CAAC,CAAC;QACN;MACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C7B,IAAI,CAAC8B,IAAI,CAAC;UACNC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,OAAO;UACdC,IAAI,EAAE;QACV,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;EAED,oBACI/B,OAAA;IAAKwC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BzC,OAAA;MAAAyC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd7C,OAAA;MACI8C,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5Bd,KAAK,EAAE7B,QAAS;MAChB4C,QAAQ,EAAGC,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACC,MAAM,CAACjB,KAAK;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF7C,OAAA;MACI8C,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,gBAAgB;MAC5Bd,KAAK,EAAE3B,QAAS;MAChB0C,QAAQ,EAAGC,CAAC,IAAK1C,WAAW,CAAC0C,CAAC,CAACC,MAAM,CAACjB,KAAK;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF7C,OAAA;MAAQmD,OAAO,EAAE3C,WAAY;MAAAiC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5C7C,OAAA;MAAQmD,OAAO,EAAEnB,cAAe;MAAAS,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd;AAAC3C,EAAA,CA5GQD,SAAS;EAAA,QACGJ,WAAW;AAAA;AAAAuD,EAAA,GADvBnD,SAAS;AA8GlB,eAAeA,SAAS;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}