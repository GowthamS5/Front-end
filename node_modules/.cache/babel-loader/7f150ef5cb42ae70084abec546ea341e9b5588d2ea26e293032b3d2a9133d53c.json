{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useNavigate();\n  const handleLogin = async () => {\n    // Send a POST request to your server's login endpoint with email and password\n    const response = await fetch('http://localhost:3002/login', {\n      // Update the URL accordingly\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      if (data.success) {\n        // Successful login, redirect based on the user's role\n        if (data.role === 0) {\n          navigate('/employeedetails'); // Redirect to employee details page\n        } else if (data.role === 1) {\n          navigate('/dashboard'); // Redirect to dashboard page\n        }\n      } else {\n        // Login failed, handle error (e.g., show an error message)\n        console.error('Login failed:', data.message);\n      }\n    } else {\n      // Server error, handle error (e.g., show an error message)\n      console.error('Server error:', response.status);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"KTGunHXs4/2naXS5yW5vp226myM=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","history","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","data","json","success","role","navigate","console","error","message","status","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    // Send a POST request to your server's login endpoint with email and password\r\n    const response = await fetch('http://localhost:3002/login', { // Update the URL accordingly\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        // Successful login, redirect based on the user's role\r\n        if (data.role === 0) {\r\n          navigate('/employeedetails'); // Redirect to employee details page\r\n        } else if (data.role === 1) {\r\n          navigate('/dashboard'); // Redirect to dashboard page\r\n        }\r\n      } else {\r\n        // Login failed, handle error (e.g., show an error message)\r\n        console.error('Login failed:', data.message);\r\n      }\r\n    } else {\r\n      // Server error, handle error (e.g., show an error message)\r\n      console.error('Server error:', response.status);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Your login form JSX here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,OAAO,GAAGT,WAAW,CAAC,CAAC;EAE7B,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,KAAK;QAAEE;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAII,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB;QACA,IAAIF,IAAI,CAACG,IAAI,KAAK,CAAC,EAAE;UACnBC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAChC,CAAC,MAAM,IAAIJ,IAAI,CAACG,IAAI,KAAK,CAAC,EAAE;UAC1BC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1B;MACF,CAAC,MAAM;QACL;QACAC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEN,IAAI,CAACO,OAAO,CAAC;MAC9C;IACF,CAAC,MAAM;MACL;MACAF,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEd,QAAQ,CAACgB,MAAM,CAAC;IACjD;EACF,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAAC3B,EAAA,CAvCQD,SAAS;EAAA,QAGAH,WAAW;AAAA;AAAAgC,EAAA,GAHpB7B,SAAS;AAyClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}