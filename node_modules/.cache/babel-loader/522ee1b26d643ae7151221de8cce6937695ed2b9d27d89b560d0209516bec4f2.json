{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\AddEmployeePage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddEmployeePage() {\n  _s();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const navigate = useNavigate();\n  const onSubmit = async data => {\n    if (!data.first_name || !data.last_name || !data.department || !data.salary || !data.DOB || !data.profile || !data.email || !data.password) {\n      alert('All fields (first_name, last_name, department, salary, DOB, profile image, email, and password) are required.');\n      return;\n    }\n    const formattedDOB = new Date(data.DOB).toISOString().split('T')[0];\n    const formData = new FormData();\n    formData.append('first_name', data.first_name);\n    formData.append('last_name', data.last_name);\n    formData.append('department', data.department);\n    formData.append('salary', data.salary);\n    formData.append('DOB', formattedDOB);\n    formData.append('profile', data.profile[0]);\n    formData.append('email', data.email);\n    formData.append('password', data.password);\n\n    // Set the role based on the checkbox status\n    formData.append('role', data.role ? '1' : '0');\n    try {\n      const response = await fetch('http://localhost:3001/employees/add', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        console.log('Employee added:', responseData);\n        navigate('/dashboard');\n        Swal.fire({\n          icon: 'success',\n          title: 'Employee Added Successfully!',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      } else {\n        throw new Error('Failed to add an employee');\n      }\n    } catch (error) {\n      console.error('Error adding an employee:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"first_name\",\n          control: control,\n          defaultValue: \"\",\n          rules: {\n            required: 'First Name is required.',\n            minLength: {\n              value: 3,\n              message: 'First Name should be at least 3 characters.'\n            },\n            maxLength: {\n              value: 25,\n              message: 'First Name should not exceed 25 characters.'\n            }\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(\"input\", {\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), errors.first_name && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.first_name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"role\",\n          control: control,\n          defaultValue: false,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), \"Make an Admin\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(AddEmployeePage, \"d7aK6qGDRb+pxFt5OnMKkA0rjNI=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = AddEmployeePage;\nexport default AddEmployeePage;\nvar _c;\n$RefreshReg$(_c, \"AddEmployeePage\");","map":{"version":3,"names":["React","useForm","Controller","useNavigate","Swal","jsxDEV","_jsxDEV","AddEmployeePage","_s","control","handleSubmit","formState","errors","navigate","onSubmit","data","first_name","last_name","department","salary","DOB","profile","email","password","alert","formattedDOB","Date","toISOString","split","formData","FormData","append","role","response","fetch","method","body","ok","responseData","json","console","log","fire","icon","title","showConfirmButton","timer","Error","error","children","fileName","_jsxFileName","lineNumber","columnNumber","name","defaultValue","rules","required","minLength","value","message","maxLength","render","field","className","type","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/AddEmployeePage.js"],"sourcesContent":["import React from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport './LoginPage.css';\r\n\r\nfunction AddEmployeePage() {\r\n  const { control, handleSubmit, formState: { errors } } = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmit = async (data) => {\r\n    if (!data.first_name || !data.last_name || !data.department || !data.salary || !data.DOB || !data.profile || !data.email || !data.password) {\r\n      alert('All fields (first_name, last_name, department, salary, DOB, profile image, email, and password) are required.');\r\n      return;\r\n    }\r\n\r\n    const formattedDOB = new Date(data.DOB).toISOString().split('T')[0];\r\n\r\n    const formData = new FormData();\r\n    formData.append('first_name', data.first_name);\r\n    formData.append('last_name', data.last_name);\r\n    formData.append('department', data.department);\r\n    formData.append('salary', data.salary);\r\n    formData.append('DOB', formattedDOB);\r\n    formData.append('profile', data.profile[0]);\r\n    formData.append('email', data.email);\r\n    formData.append('password', data.password);\r\n\r\n    // Set the role based on the checkbox status\r\n    formData.append('role', data.role ? '1' : '0');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/employees/add', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        console.log('Employee added:', responseData);\r\n        navigate('/dashboard');\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Employee Added Successfully!',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      } else {\r\n        throw new Error('Failed to add an employee');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding an employee:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add Employee</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>\r\n          First Name:\r\n          <Controller\r\n            name=\"first_name\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: 'First Name is required.',\r\n              minLength: {\r\n                value: 3,\r\n                message: 'First Name should be at least 3 characters.',\r\n              },\r\n              maxLength: {\r\n                value: 25,\r\n                message: 'First Name should not exceed 25 characters.',\r\n              },\r\n            }}\r\n            render={({ field }) => <input {...field} />}\r\n          />\r\n        </label>\r\n        {errors.first_name && <p className=\"error\">{errors.first_name.message}</p>}\r\n        <br />\r\n        {/* ... (other input fields) ... */}\r\n        <label>\r\n          <Controller\r\n            name=\"role\"\r\n            control={control}\r\n            defaultValue={false}\r\n            render={({ field }) => (\r\n              <div>\r\n                <input type=\"checkbox\" {...field} />\r\n                Make an Admin\r\n              </div>\r\n            )}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add Employee</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEmployeePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}