{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onLogin = async data => {\n    const {\n      email,\n      password\n    } = data;\n    try {\n      // Send a POST request to your server for authentication\n      const response = await fetch('http://localhost:3001/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        const token = responseData.token; // Extract the token from the response\n\n        // Store the token in localStorage or a secure storage method\n        localStorage.setItem('token', token);\n        Swal.fire({\n          icon: 'success',\n          title: 'Login Successful',\n          text: `Welcome, ${email}!`\n        });\n\n        // Redirect to the dashboard or another page on successful login\n        navigate('/dashboard');\n      } else {\n        console.error('Login failed');\n        Swal.fire({\n          icon: 'error',\n          title: 'Login Failed',\n          text: 'Invalid email or password'\n        });\n      }\n    } catch (error) {\n      console.error('Error login:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'An error occurred while trying to log in'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onLogin),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter \",\n        ...register('email', {\n          required: 'Email is required',\n          pattern: {\n            value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n            message: 'Invalid email address'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        ...register('password', {\n          required: 'Password is required'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/register'),\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"/YuKlbi5VeGYmL8Q8s+8xNji9ko=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useForm","useNavigate","Swal","jsxDEV","_jsxDEV","LoginPage","_s","navigate","register","handleSubmit","formState","errors","onLogin","data","email","password","response","fetch","method","headers","body","JSON","stringify","ok","responseData","json","token","localStorage","setItem","fire","icon","title","text","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","pattern","value","message","onClick","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction LoginPage() {\r\n  const navigate = useNavigate();\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const onLogin = async (data) => {\r\n    const { email, password } = data;\r\n\r\n    try {\r\n      // Send a POST request to your server for authentication\r\n      const response = await fetch('http://localhost:3001/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        const token = responseData.token; // Extract the token from the response\r\n\r\n        // Store the token in localStorage or a secure storage method\r\n        localStorage.setItem('token', token);\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Login Successful',\r\n          text: `Welcome, ${email}!`,\r\n        });\r\n\r\n        // Redirect to the dashboard or another page on successful login\r\n        navigate('/dashboard');\r\n      } else {\r\n        console.error('Login failed');\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Login Failed',\r\n          text: 'Invalid email or password',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error login:', error);\r\n\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'An error occurred while trying to log in',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit(onLogin)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter \"\r\n          {...register('email', {\r\n            required: 'Email is required',\r\n            pattern: {\r\n              value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\r\n              message: 'Invalid email address',\r\n            },\r\n          })}\r\n        />\r\n        {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          {...register('password', {\r\n            required: 'Password is required',\r\n          })}\r\n        />\r\n        {errors.password && <p className=\"error\">{errors.password.message}</p>}\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n\r\n      <button onClick={() => navigate('/register')}>Register</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}