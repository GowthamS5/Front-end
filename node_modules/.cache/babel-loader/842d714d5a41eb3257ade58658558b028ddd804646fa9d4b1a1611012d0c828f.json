{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\EmployeePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeDetailsPage() {\n  _s();\n  const {\n    employeeId\n  } = useParams(); // Get the employeeId from the URL\n  const [employeeDetails, setEmployeeDetails] = useState(null);\n  useEffect(() => {\n    // Make a fetch request to your API using the employeeId\n    fetch(`http://localhost:3001/employees/${employeeId}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch employee details');\n      }\n      return response.json();\n    }).then(data => {\n      setEmployeeDetails(data); // Update the component state with employee details\n    }).catch(error => {\n      console.error('Error fetching employee details:', error);\n    });\n  }, [employeeId]);\n  const clickUpdateEmployee = employeeId => {\n    navigate(`/update-employee/${employeeId}`);\n  };\n\n  // Render the employee details once they are fetched\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), employeeDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", employeeDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Employee ID: \", employeeDetails.employeeId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-button\",\n        onClick: () => clickUpdateEmployee(employee.id),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeDetailsPage, \"yWXGYstpgZwHcda8I296JK2qnV8=\", false, function () {\n  return [useParams];\n});\n_c = EmployeeDetailsPage;\nexport default EmployeeDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","EmployeeDetailsPage","_s","employeeId","employeeDetails","setEmployeeDetails","fetch","then","response","ok","Error","json","data","catch","error","console","clickUpdateEmployee","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","name","className","onClick","employee","id","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/EmployeePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction EmployeeDetailsPage() {\r\n  const { employeeId } = useParams(); // Get the employeeId from the URL\r\n  const [employeeDetails, setEmployeeDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Make a fetch request to your API using the employeeId\r\n    fetch(`http://localhost:3001/employees/${employeeId}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch employee details');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setEmployeeDetails(data); // Update the component state with employee details\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching employee details:', error);\r\n      });\r\n  }, [employeeId]);\r\n  const clickUpdateEmployee = (employeeId) => {\r\n        navigate(`/update-employee/${employeeId}`);\r\n    };\r\n\r\n  // Render the employee details once they are fetched\r\n  return (\r\n    <div>\r\n      <h2>Employee Details</h2>\r\n      {employeeDetails ? (\r\n        <div>\r\n          <p>Name: {employeeDetails.name}</p>\r\n          <p>Employee ID: {employeeDetails.employeeId}</p>\r\n  <button\r\n                                    className=\"update-button\"\r\n                                    onClick={() => clickUpdateEmployee(employee.id)}\r\n                                >\r\n                                    Update\r\n                                </button>\r\n          {/* Add more details as needed */}\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeDetailsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAW,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAE,mCAAkCH,UAAW,EAAC,CAAC,CACnDI,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;MACrD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdP,kBAAkB,CAACO,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAChB,MAAMa,mBAAmB,GAAIb,UAAU,IAAK;IACtCc,QAAQ,CAAE,oBAAmBd,UAAW,EAAC,CAAC;EAC9C,CAAC;;EAEH;EACA,oBACEH,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBlB,eAAe,gBACdJ,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,GAAG,QAAM,EAACd,eAAe,CAACmB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCtB,OAAA;QAAAkB,QAAA,GAAG,eAAa,EAACd,eAAe,CAACD,UAAU;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDtB,OAAA;QACkCwB,SAAS,EAAC,eAAe;QACzBC,OAAO,EAAEA,CAAA,KAAMT,mBAAmB,CAACU,QAAQ,CAACC,EAAE,CAAE;QAAAT,QAAA,EACnD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC,gBAENtB,OAAA;MAAAkB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CA7CQD,mBAAmB;EAAA,QACHH,SAAS;AAAA;AAAA8B,EAAA,GADzB3B,mBAAmB;AA+C5B,eAAeA,mBAAmB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}