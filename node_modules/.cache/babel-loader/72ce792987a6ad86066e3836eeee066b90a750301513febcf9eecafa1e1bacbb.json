{"ast":null,"code":"var _jsxFileName = \"C:\\\\HP\\\\app\\\\src\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './DashboardPage.css';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const navigate = useNavigate();\n  const [employeeDetails, setEmployeeDetails] = useState([]);\n  useEffect(() => {\n    // Check if the token exists in local storage\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // Token doesn't exist, or it has expired, so redirect to the login page\n      navigate('/');\n      return;\n    }\n\n    // You can also check the token expiration time here if your JWT contains an expiration field.\n    const decodedToken = jwt_decode(token);\n    const currentTime = Date.now() / 1000; // Convert to seconds\n\n    if (decodedToken.exp < currentTime) {\n      // Token has expired, redirect to the login page\n      navigate('/');\n      return;\n    }\n\n    // Token is valid, fetch employee details or perform other actions here\n\n    fetch('http://localhost:3001/employees', {\n      headers: {\n        Authorization: `Bearer ${token}` // Include the token in the request header\n      }\n    }).then(response => {\n      if (response.status === 401) {\n        // Unauthorized (token expired), redirect to the login page\n        navigate('/');\n      }\n      return response.json();\n    }).then(data => setEmployeeDetails(data)).catch(error => {\n      console.error('Error getting employee details:', error);\n    });\n  }, [navigate]);\n\n  //const navigate = useNavigate();\n\n  const clickAddEmployee = () => {\n    navigate('/add-employee');\n  };\n  const clickUpdateEmployee = employeeId => {\n    navigate(`/update-employee/${employeeId}`);\n  };\n  const clickDeleteEmployee = employeeId => {\n    navigate(`/delete-employee/${employeeId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WELCOME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employees List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"employee-list\",\n      children: employeeDetails.map(employee => {\n        const dob = new Date(employee.DOB);\n        const formattedDOB = format(dob, 'dd/MM/yyyy');\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"employee-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: employee.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"employee-name\",\n              children: [employee.first_name, \" \", employee.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"employee-department\",\n              children: [\"Department: \", employee.department]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"employee-salary\",\n              children: [\"Salary: \", employee.salary]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"employee-dob\",\n              children: [\"DOB: \", formattedDOB]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"update-button\",\n              onClick: () => clickUpdateEmployee(employee.id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => clickDeleteEmployee(employee.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: clickAddEmployee,\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(DashboardPage, \"0YAjschbLQynX/Gu/I3sIGp9rdw=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","format","jsxDEV","_jsxDEV","DashboardPage","_s","navigate","employeeDetails","setEmployeeDetails","token","localStorage","getItem","decodedToken","jwt_decode","currentTime","Date","now","exp","fetch","headers","Authorization","then","response","status","json","data","catch","error","console","clickAddEmployee","clickUpdateEmployee","employeeId","clickDeleteEmployee","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","employee","dob","DOB","formattedDOB","src","image","first_name","last_name","department","salary","onClick","id","_c","$RefreshReg$"],"sources":["C:/HP/app/src/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './DashboardPage.css';\r\nimport { format } from 'date-fns'; \r\n\r\nfunction DashboardPage() {\r\n    const navigate = useNavigate();\r\n    const [employeeDetails, setEmployeeDetails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Check if the token exists in local storage\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            // Token doesn't exist, or it has expired, so redirect to the login page\r\n            navigate('/');\r\n            return;\r\n        }\r\n\r\n        // You can also check the token expiration time here if your JWT contains an expiration field.\r\n        const decodedToken = jwt_decode(token);\r\n        const currentTime = Date.now() / 1000; // Convert to seconds\r\n\r\n        if (decodedToken.exp < currentTime) {\r\n            // Token has expired, redirect to the login page\r\n            navigate('/');\r\n            return;\r\n        }\r\n\r\n        // Token is valid, fetch employee details or perform other actions here\r\n\r\n        fetch('http://localhost:3001/employees', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`, // Include the token in the request header\r\n            },\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 401) {\r\n                    // Unauthorized (token expired), redirect to the login page\r\n                    navigate('/');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => setEmployeeDetails(data))\r\n            .catch((error) => {\r\n                console.error('Error getting employee details:', error);\r\n            });\r\n    }, [navigate]);\r\n\r\n    //const navigate = useNavigate();\r\n\r\n    const clickAddEmployee = () => {\r\n        navigate('/add-employee');\r\n    };\r\n\r\n    const clickUpdateEmployee = (employeeId) => {\r\n        navigate(`/update-employee/${employeeId}`);\r\n    };\r\n\r\n    const clickDeleteEmployee = (employeeId) => {\r\n        navigate(`/delete-employee/${employeeId}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h1>WELCOME</h1>\r\n            <h2>Employees List</h2>\r\n            <ul className=\"employee-list\">\r\n                {employeeDetails.map(employee => {\r\n                    const dob = new Date(employee.DOB);\r\n                    const formattedDOB = format(dob, 'dd/MM/yyyy'); \r\n\r\n                    return (\r\n                        <li key={employee.id} className=\"employee-item\">\r\n                            <div className=\"employee-image\">\r\n                                <img src={employee.image}/>\r\n                            </div>\r\n                            <div className=\"employee-info\">\r\n                                <p className=\"employee-name\">\r\n                                    {employee.first_name} {employee.last_name}\r\n                                </p>\r\n                                <p className=\"employee-department\">\r\n                                    Department: {employee.department}\r\n                                </p>\r\n                                <p className=\"employee-salary\">\r\n                                    Salary: {employee.salary}\r\n                                </p>\r\n                                <p className=\"employee-dob\">\r\n                                    DOB: {formattedDOB}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"employee-buttons\">\r\n                                <button\r\n                                    className=\"update-button\"\r\n                                    onClick={() => clickUpdateEmployee(employee.id)}\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                                <button\r\n                                    className=\"delete-button\"\r\n                                    onClick={() => clickDeleteEmployee(employee.id)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <button className=\"add-button\" onClick={clickAddEmployee}>\r\n                Add Employee\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}