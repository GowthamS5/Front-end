{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css';\nimport Swal from 'sweetalert2';\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const handleLogin = async data => {\n    // Your login logic here\n    try {\n      // Send login request with data.username and data.password\n      // ...\n\n      // If login successful, navigate to the dashboard\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error login:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'An error occurred while trying to log in'\n      });\n    }\n  };\n  const handleRegister = async data => {\n    // Your registration logic here\n    try {\n      // Send registration request with data.username, data.email, data.password, and data.confirmPassword\n      // ...\n\n      Swal.fire({\n        icon: 'success',\n        title: 'Registration Successful',\n        text: 'You can now log in with your new account'\n      });\n    } catch (error) {\n      console.error('Error registering:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'An error occurred while trying to register'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => Swal.fire({\n        title: 'Login',\n        html: '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Username\">' + '<input type=\"password\" id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Password\">',\n        focusConfirm: false,\n        preConfirm: () => {\n          const username = Swal.getPopup().querySelector('#swal-input1').value;\n          const password = Swal.getPopup().querySelector('#swal-input2').value;\n          handleLogin({\n            username,\n            password\n          });\n        }\n      }),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => Swal.fire({\n        title: 'Register',\n        html: '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Username\">' + '<input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Email\">' + '<input type=\"password\" id=\"swal-input3\" class=\"swal2-input\" placeholder=\"Password\">' + '<input type=\"password\" id=\"swal-input4\" class=\"swal2-input\" placeholder=\"Confirm Password\">',\n        focusConfirm: false,\n        preConfirm: () => {\n          const username = Swal.getPopup().querySelector('#swal-input1').value;\n          const email = Swal.getPopup().querySelector('#swal-input2').value;\n          const password = Swal.getPopup().querySelector('#swal-input3').value;\n          const confirmPassword = Swal.getPopup().querySelector('#swal-input4').value;\n          handleRegister({\n            username,\n            email,\n            password,\n            confirmPassword\n          });\n        }\n      }),\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleLogin),\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        name: \"username\",\n        control: control,\n        defaultValue: \"\",\n        rules: {\n          required: 'Username is required'\n        },\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.username.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"3CX7JxFDoHtRZVxUDzuM9nGgu9I=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Swal","useForm","Controller","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","navigate","username","setUsername","password","setPassword","handleSubmit","control","formState","errors","handleLogin","data","error","console","fire","icon","title","text","handleRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","html","focusConfirm","preConfirm","getPopup","querySelector","value","email","confirmPassword","onSubmit","name","defaultValue","rules","required","render","field","type","placeholder","message","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport Swal from 'sweetalert2';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\nfunction LoginPage() {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const { handleSubmit, control, formState: { errors } } = useForm();\r\n\r\n  const handleLogin = async (data) => {\r\n    // Your login logic here\r\n    try {\r\n      // Send login request with data.username and data.password\r\n      // ...\r\n\r\n      // If login successful, navigate to the dashboard\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error('Error login:', error);\r\n\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'An error occurred while trying to log in',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (data) => {\r\n    // Your registration logic here\r\n    try {\r\n      // Send registration request with data.username, data.email, data.password, and data.confirmPassword\r\n      // ...\r\n\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Registration Successful',\r\n        text: 'You can now log in with your new account',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error registering:', error);\r\n\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'An error occurred while trying to register',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Welcome</h2>\r\n      <button onClick={() => Swal.fire({\r\n        title: 'Login',\r\n        html:\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Username\">' +\r\n          '<input type=\"password\" id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Password\">',\r\n        focusConfirm: false,\r\n        preConfirm: () => {\r\n          const username = Swal.getPopup().querySelector('#swal-input1').value;\r\n          const password = Swal.getPopup().querySelector('#swal-input2').value;\r\n          handleLogin({ username, password });\r\n        },\r\n      })}>Login</button>\r\n      <button onClick={() => Swal.fire({\r\n        title: 'Register',\r\n        html:\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Username\">' +\r\n          '<input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Email\">' +\r\n          '<input type=\"password\" id=\"swal-input3\" class=\"swal2-input\" placeholder=\"Password\">' +\r\n          '<input type=\"password\" id=\"swal-input4\" class=\"swal2-input\" placeholder=\"Confirm Password\">',\r\n        focusConfirm: false,\r\n        preConfirm: () => {\r\n          const username = Swal.getPopup().querySelector('#swal-input1').value;\r\n          const email = Swal.getPopup().querySelector('#swal-input2').value;\r\n          const password = Swal.getPopup().querySelector('#swal-input3').value;\r\n          const confirmPassword = Swal.getPopup().querySelector('#swal-input4').value;\r\n          handleRegister({ username, email, password, confirmPassword });\r\n        },\r\n      })}>Register</button>\r\n\r\n      {/* The rest of your login form with react-hook-form */}\r\n      <form onSubmit={handleSubmit(handleLogin)}>\r\n        <Controller\r\n          name=\"username\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          rules={{\r\n            required: 'Username is required',\r\n          }}\r\n          render={({ field }) => (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                {...field}\r\n              />\r\n              {errors.username && (\r\n                <p className=\"error\">{errors.username.message}</p>\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n        {/* Add similar Controller components for email, password, and confirmPassword */}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}