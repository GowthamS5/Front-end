{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css';\nimport Modal from 'react-modal';\nimport { useForm, Controller } from 'react-hook-form';\nimport Swal from 'sweetalert2';\nimport { format } from 'date-fns';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    },\n    reset,\n    getValues\n  } = useForm();\n  const [isLoginPopOpen, setIsLoginPopOpen] = useState(false);\n  const [isRegisterPopOpen, setIsRegisterPopOpen] = useState(false);\n  const [isEmployeeLoginPopOpen, setIsEmployeeLoginPopOpen] = useState(false);\n  const [employeeId, setEmployeeId] = useState('');\n  const [employeeDetails, setEmployeeDetails] = useState(null);\n  const [isEmployeeDetailsOpen, setIsEmployeeDetailsOpen] = useState(false);\n  localStorage.setItem('employeeId', employeeId);\n  const openLoginPop = () => {\n    setIsLoginPopOpen(true);\n  };\n  const closeLoginPop = () => {\n    setIsLoginPopOpen(false);\n    reset();\n  };\n  const openRegisterPop = () => {\n    setIsRegisterPopOpen(true);\n  };\n  const closeRegisterPop = () => {\n    setIsRegisterPopOpen(false);\n    reset();\n  };\n  const openEmployeeLoginPop = () => {\n    setIsEmployeeLoginPopOpen(true);\n  };\n  const closeEmployeeLoginPop = () => {\n    setIsEmployeeLoginPopOpen(false);\n    reset();\n  };\n  const openEmployeeDetails = () => {\n    setIsEmployeeDetailsOpen(true);\n  };\n  const closeEmployeeDetails = () => {\n    setIsEmployeeDetailsOpen(false);\n  };\n  const validateConfirmPassword = value => {\n    const passwordValue = getValues('password');\n    return value === passwordValue || 'Passwords do not match';\n  };\n  const handleLogin = async data => {\n    try {\n      const response = await fetch('http://localhost:3001/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: data.username,\n          password: data.password\n        })\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        localStorage.setItem('token', responseData.token);\n        console.log('JWT Token is:', responseData.token);\n        navigate('/dashboard');\n        closeLoginPop();\n      } else {\n        console.error('Login failed');\n        Swal.fire({\n          icon: 'error',\n          title: 'Login Failed',\n          text: 'Invalid username or password'\n        });\n      }\n    } catch (error) {\n      console.error('Error login:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'An error occurred while trying to log in'\n      });\n    }\n  };\n  const handleEmployeeLogin = async () => {\n    try {\n      if (!employeeId) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Employee ID Required',\n          text: 'Please enter your employee ID'\n        });\n        return;\n      }\n      const response = await fetch(`http://localhost:3001/employees/${employeeId}`, {\n        method: 'GET'\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        setEmployeeDetails(responseData);\n        openEmployeeDetails();\n        console.error('Employee login failed');\n        Swal.fire({\n          icon: 'error',\n          title: 'Employee Login Failed',\n          text: 'Invalid employee ID'\n        });\n      }\n    } catch (error) {\n      console.error('Error employee login:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'An error occurred while trying to log in as an employee'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openLoginPop,\n      children: \"Admin-Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openEmployeeLoginPop,\n      children: \"Employee-Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openRegisterPop,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isLoginPopOpen,\n      onRequestClose: closeLoginPop,\n      contentLabel: \"Login Modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin-Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleLogin),\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          name: \"username\",\n          control: control,\n          defaultValue: \"\",\n          rules: {\n            required: 'Username is required'\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter Username\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"password\",\n          control: control,\n          defaultValue: \"\",\n          rules: {\n            required: 'Password is required'\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Enter Password\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closeLoginPop,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isEmployeeLoginPopOpen,\n      onRequestClose: closeEmployeeLoginPop,\n      contentLabel: \"Employee Login Modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employee Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Employee ID\",\n        value: employeeId,\n        onChange: e => setEmployeeId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEmployeeLogin,\n        children: \"Employee-Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: closeEmployeeLoginPop,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isEmployeeDetailsOpen,\n      onRequestClose: closeEmployeeDetails,\n      contentLabel: \"Employee Details Modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employee Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), employeeDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", employeeDetails.first_name, \" \", employeeDetails.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Department: \", employeeDetails.department]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Salary: \", employeeDetails.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"DOB: \", new Date(employeeDetails.DOB).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: employeeDetails.image,\n            alt: \"Profile\",\n            width: \"150\",\n            height: \"150\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No employee details available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: closeEmployeeDetails,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isRegisterPopOpen,\n      onRequestClose: closeRegisterPop,\n      contentLabel: \"Registration Modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleRegister),\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          name: \"username\",\n          control: control,\n          defaultValue: \"\",\n          rules: {\n            required: 'Username is required',\n            minLength: {\n              value: 3,\n              message: 'Username should be at least 3 characters'\n            },\n            maxLength: {\n              value: 25,\n              message: 'Username should not exceed 25 characters'\n            }\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username (3-25 characters)\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"email\",\n          control: control,\n          defaultValue: \"\",\n          rules: {\n            required: 'Email is required',\n            pattern: {\n              value: /^\\S+@\\S+$/i,\n              message: 'Invalid email address'\n            }\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter valid Email\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"password\",\n          control: control,\n          defaultValue: \"\",\n          rules: {\n            required: 'Password is required',\n            minLength: {\n              value: 3,\n              message: 'Password should be at least 3 characters long'\n            },\n            maxLength: {\n              value: 25,\n              message: 'Password should not exceed 25 characters'\n            }\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password (3-25 characters)\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"confirmPassword\",\n          control: control,\n          defaultValue: \"\",\n          rules: {\n            required: 'Confirm Password is required',\n            validate: validateConfirmPassword\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm Password (min 6-25 characters)\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.confirmPassword.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closeRegisterPop,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"E8LmETet8TPNRQ5g6XiFfoyfsNs=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Modal","useForm","Controller","Swal","format","jwt_decode","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","navigate","handleSubmit","control","formState","errors","reset","getValues","isLoginPopOpen","setIsLoginPopOpen","isRegisterPopOpen","setIsRegisterPopOpen","isEmployeeLoginPopOpen","setIsEmployeeLoginPopOpen","employeeId","setEmployeeId","employeeDetails","setEmployeeDetails","isEmployeeDetailsOpen","setIsEmployeeDetailsOpen","localStorage","setItem","openLoginPop","closeLoginPop","openRegisterPop","closeRegisterPop","openEmployeeLoginPop","closeEmployeeLoginPop","openEmployeeDetails","closeEmployeeDetails","validateConfirmPassword","value","passwordValue","handleLogin","data","response","fetch","method","headers","body","JSON","stringify","username","password","ok","responseData","json","token","console","log","error","fire","icon","title","text","handleEmployeeLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","contentLabel","onSubmit","name","defaultValue","rules","required","render","field","type","placeholder","message","onChange","e","target","first_name","last_name","department","salary","Date","DOB","toLocaleDateString","src","image","alt","width","height","handleRegister","minLength","maxLength","pattern","email","validate","confirmPassword","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport Modal from 'react-modal';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Swal from 'sweetalert2';\r\nimport { format } from 'date-fns'; \r\nimport jwt_decode from 'jwt-decode';\r\n\r\nfunction LoginPage() {\r\n  const navigate = useNavigate();\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n    reset,\r\n    getValues,\r\n  } = useForm();\r\n\r\n  const [isLoginPopOpen, setIsLoginPopOpen] = useState(false);\r\n  const [isRegisterPopOpen, setIsRegisterPopOpen] = useState(false);\r\n  const [isEmployeeLoginPopOpen, setIsEmployeeLoginPopOpen] = useState(false);\r\n  const [employeeId, setEmployeeId] = useState('');\r\n  const [employeeDetails, setEmployeeDetails] = useState(null);\r\n  const [isEmployeeDetailsOpen,setIsEmployeeDetailsOpen]=useState(false);\r\n\r\n  localStorage.setItem('employeeId', employeeId);\r\n\r\n  const openLoginPop = () => {\r\n    setIsLoginPopOpen(true);\r\n  };\r\n\r\n  const closeLoginPop = () => {\r\n    setIsLoginPopOpen(false);\r\n    reset();\r\n  };\r\n\r\n  const openRegisterPop = () => {\r\n    setIsRegisterPopOpen(true);\r\n  };\r\n\r\n  const closeRegisterPop = () => {\r\n    setIsRegisterPopOpen(false);\r\n    reset();\r\n  };\r\n\r\n  const openEmployeeLoginPop = () => {\r\n    setIsEmployeeLoginPopOpen(true);\r\n  };\r\n\r\n  const closeEmployeeLoginPop = () => {\r\n    setIsEmployeeLoginPopOpen(false);\r\n    reset();\r\n  };\r\n const openEmployeeDetails = () => {\r\n    setIsEmployeeDetailsOpen(true);\r\n  };\r\n\r\n  const closeEmployeeDetails = () => {\r\n    setIsEmployeeDetailsOpen(false);\r\n  };\r\n  const validateConfirmPassword = (value) => {\r\n    const passwordValue = getValues('password');\r\n    return value === passwordValue || 'Passwords do not match';\r\n  };\r\n\r\n  const handleLogin = async (data) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: data.username,\r\n          password: data.password,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        localStorage.setItem('token', responseData.token);\r\n        console.log('JWT Token is:', responseData.token);\r\n        navigate('/dashboard');\r\n        closeLoginPop();\r\n      } else {\r\n        console.error('Login failed');\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Login Failed',\r\n          text: 'Invalid username or password',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error login:', error);\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'An error occurred while trying to log in',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEmployeeLogin = async () => {\r\n  try {\r\n    if (!employeeId) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Employee ID Required',\r\n        text: 'Please enter your employee ID',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:3001/employees/${employeeId}`, {\r\n      method: 'GET', \r\n    });\r\n\r\n    if (response.ok) {\r\n      const responseData = await response.json();\r\n      setEmployeeDetails(responseData);\r\n      openEmployeeDetails(); \r\n      console.error('Employee login failed');\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Employee Login Failed',\r\n        text: 'Invalid employee ID',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Error employee login:', error);\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Error',\r\n      text: 'An error occurred while trying to log in as an employee',\r\n    });\r\n  }\r\n};\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Welcome</h2>\r\n      <button onClick={openLoginPop}>Admin-Login</button>\r\n      <button onClick={openEmployeeLoginPop}>Employee-Login</button>\r\n      <button onClick={openRegisterPop}>Register</button>\r\n\r\n      {/* Login */}\r\n      <Modal\r\n        isOpen={isLoginPopOpen}\r\n        onRequestClose={closeLoginPop}\r\n        contentLabel=\"Login Modal\"\r\n      >\r\n        <h2>Admin-Login</h2>\r\n        <form onSubmit={handleSubmit(handleLogin)}>\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: 'Username is required',\r\n            }}\r\n            render={({ field }) => (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Username\"\r\n                  {...field}\r\n                />\r\n                {errors.username && (\r\n                  <p className=\"error\">{errors.username.message}</p>\r\n                )}\r\n              </>\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: 'Password is required',\r\n            }}\r\n            render={({ field }) => (\r\n              <>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  {...field}\r\n                />\r\n                {errors.password && (\r\n                  <p className=\"error\">{errors.password.message}</p>\r\n                )}\r\n              </>\r\n            )}\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n          <button className=\"close-button\" onClick={closeLoginPop}>Close</button>\r\n        </form>\r\n      </Modal>\r\n\r\n      {/* Employee Login */}\r\n      <Modal\r\n  isOpen={isEmployeeLoginPopOpen}\r\n  onRequestClose={closeEmployeeLoginPop}\r\n  contentLabel=\"Employee Login Modal\"\r\n>\r\n  <h2>Employee Login</h2>\r\n <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Employee ID\"\r\n        value={employeeId}\r\n        onChange={(e) => setEmployeeId(e.target.value)}\r\n      />\r\n      <button onClick={handleEmployeeLogin}>Employee-Login</button>\r\n  <button className=\"close-button\" onClick={closeEmployeeLoginPop}>\r\n    Close\r\n  </button>\r\n</Modal>\r\n<Modal\r\n        isOpen={isEmployeeDetailsOpen}\r\n        onRequestClose={closeEmployeeDetails}\r\n        contentLabel=\"Employee Details Modal\"\r\n      >\r\n        <h2>Employee Details</h2>\r\n        {employeeDetails ? (\r\n          <div>\r\n            <p>Name: {employeeDetails.first_name} {employeeDetails.last_name}</p>\r\n            <p>Department: {employeeDetails.department}</p>\r\n            <p>Salary: {employeeDetails.salary}</p>\r\n            <p>DOB: {new Date(employeeDetails.DOB).toLocaleDateString()}</p>\r\n            <div>\r\n              <img src={employeeDetails.image} alt=\"Profile\" width=\"150\" height=\"150\" />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p>No employee details available</p>\r\n        )}\r\n        <button className=\"close-button\" onClick={closeEmployeeDetails}>\r\n          Close\r\n        </button>\r\n      </Modal>\r\n\r\n      {/* Registration */}\r\n      <Modal\r\n        isOpen={isRegisterPopOpen}\r\n        onRequestClose={closeRegisterPop}\r\n        contentLabel=\"Registration Modal\"\r\n      >\r\n        <h2>Register</h2>\r\n        <form onSubmit={handleSubmit(handleRegister)}>\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: 'Username is required',\r\n              minLength: {\r\n                value: 3,\r\n                message: 'Username should be at least 3 characters',\r\n              },\r\n              maxLength: {\r\n                value: 25,\r\n                message: 'Username should not exceed 25 characters',\r\n              },\r\n            }}\r\n            render={({ field }) => (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Username (3-25 characters)\"\r\n                  {...field}\r\n                />\r\n                {errors.username && (\r\n                  <p className=\"error\">{errors.username.message}</p>\r\n                )}\r\n              </>\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: 'Email is required',\r\n              pattern: {\r\n                value: /^\\S+@\\S+$/i,\r\n                message: 'Invalid email address',\r\n              },\r\n            }}\r\n            render={({ field }) => (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter valid Email\"\r\n                  {...field}\r\n                />\r\n                {errors.email && (\r\n                  <p className=\"error\">{errors.email.message}</p>\r\n                )}\r\n              </>\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: 'Password is required',\r\n              minLength: {\r\n                value: 3,\r\n                message: 'Password should be at least 3 characters long',\r\n              },\r\n              maxLength: {\r\n                value: 25,\r\n                message: 'Password should not exceed 25 characters',\r\n              },\r\n            }}\r\n            render={({ field }) => (\r\n              <>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password (3-25 characters)\"\r\n                  {...field}\r\n                />\r\n                {errors.password && (\r\n                  <p className=\"error\">{errors.password.message}</p>\r\n                )}\r\n              </>\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"confirmPassword\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: 'Confirm Password is required',\r\n              validate: validateConfirmPassword,\r\n            }}\r\n            render={({ field }) => (\r\n              <>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password (min 6-25 characters)\"\r\n                  {...field}\r\n                />\r\n                {errors.confirmPassword && (\r\n                  <p className=\"error\">{errors.confirmPassword.message}</p>\r\n                )}\r\n              </>\r\n            )}\r\n          />\r\n          <button type=\"submit\">Register</button>\r\n          <button className=\"close-button\" onClick={closeRegisterPop}>Close</button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}