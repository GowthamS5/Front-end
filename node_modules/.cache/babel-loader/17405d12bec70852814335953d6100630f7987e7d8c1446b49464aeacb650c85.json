{"ast":null,"code":"var _jsxFileName = \"C:\\\\MVC20\\\\app\\\\src\\\\componets\\\\UpdateEmployeePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateEmployeePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [employeeData, setEmployeeData] = useState({\n    first_name: '',\n    last_name: '',\n    department: '',\n    salary: '',\n    email: '',\n    password: '',\n    role: 0 // Default role value is 0 (not checked).\n  });\n\n  const [image, setImage] = useState(null);\n  const imageInputRef = useRef();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEmployeeData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleRoleChange = e => {\n    const {\n      checked\n    } = e.target;\n    const roleValue = checked ? 1 : 0;\n    setEmployeeData(prevData => ({\n      ...prevData,\n      role: roleValue\n    }));\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setImage(file);\n  };\n  const handleUpdateEmployee = () => {\n    const formData = new FormData();\n    formData.append('first_name', employeeData.first_name);\n    formData.append('last_name', employeeData.last_name);\n    formData.append('department', employeeData.department);\n    formData.append('salary', employeeData.salary);\n    formData.append('email', employeeData.email);\n    formData.append('password', employeeData.password);\n    formData.append('role', employeeData.role);\n    if (image) {\n      formData.append('profile', image);\n    }\n    fetch(`http://localhost:3001/employees/${id}`, {\n      method: 'PUT',\n      body: formData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Error updating employee');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Employee updated:', data);\n      navigate('/dashboard');\n      Swal.fire({\n        icon: 'success',\n        title: 'Employee Updated Successfully!',\n        showConfirmButton: false,\n        timer: 2500\n      });\n    }).catch(error => {\n      console.error('Error updating employee:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"first_name\",\n        placeholder: \"First Name\",\n        value: employeeData.first_name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"last_name\",\n        placeholder: \"Last Name\",\n        value: employeeData.last_name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"department\",\n        placeholder: \"Department\",\n        value: employeeData.department,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"salary\",\n        placeholder: \"Salary\",\n        value: employeeData.salary,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: employeeData.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: employeeData.password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Role:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"role\",\n          checked: employeeData.role === 1,\n          onChange: handleRoleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: imageInputRef,\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateEmployee,\n        children: \"Update Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateEmployeePage, \"i8/920casMYB8Wy5JNWD4Kx9JgE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateEmployeePage;\nexport default UpdateEmployeePage;\nvar _c;\n$RefreshReg$(_c, \"UpdateEmployeePage\");","map":{"version":3,"names":["React","useState","useRef","useParams","useNavigate","Swal","jsxDEV","_jsxDEV","UpdateEmployeePage","_s","id","navigate","employeeData","setEmployeeData","first_name","last_name","department","salary","email","password","role","image","setImage","imageInputRef","handleInputChange","e","name","value","target","prevData","handleRoleChange","checked","roleValue","handleImageChange","file","files","handleUpdateEmployee","formData","FormData","append","fetch","method","body","then","response","ok","Error","json","data","console","log","fire","icon","title","showConfirmButton","timer","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","accept","ref","onClick","_c","$RefreshReg$"],"sources":["C:/MVC20/app/src/componets/UpdateEmployeePage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction UpdateEmployeePage() {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [employeeData, setEmployeeData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        department: '',\r\n        salary: '',\r\n        email: '',\r\n        password: '',\r\n        role: 0, // Default role value is 0 (not checked).\r\n    });\r\n\r\n    const [image, setImage] = useState(null);\r\n    const imageInputRef = useRef();\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEmployeeData((prevData) => ({ ...prevData, [name]: value }));\r\n    };\r\n\r\n    const handleRoleChange = (e) => {\r\n        const { checked } = e.target;\r\n        const roleValue = checked ? 1 : 0;\r\n        setEmployeeData((prevData) => ({ ...prevData, role: roleValue }));\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        setImage(file);\r\n    };\r\n\r\n    const handleUpdateEmployee = () => {\r\n        const formData = new FormData();\r\n        formData.append('first_name', employeeData.first_name);\r\n        formData.append('last_name', employeeData.last_name);\r\n        formData.append('department', employeeData.department);\r\n        formData.append('salary', employeeData.salary);\r\n        formData.append('email', employeeData.email);\r\n        formData.append('password', employeeData.password);\r\n        formData.append('role', employeeData.role);\r\n        if (image) {\r\n            formData.append('profile', image);\r\n        }\r\n\r\n        fetch(`http://localhost:3001/employees/${id}`, {\r\n            method: 'PUT',\r\n            body: formData,\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Error updating employee');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                console.log('Employee updated:', data);\r\n                navigate('/dashboard');\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Employee Updated Successfully!',\r\n                    showConfirmButton: false,\r\n                    timer: 2500,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error updating employee:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Update Employee</h2>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"First Name\"\r\n                    value={employeeData.first_name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    placeholder=\"Last Name\"\r\n                    value={employeeData.last_name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"department\"\r\n                    placeholder=\"Department\"\r\n                    value={employeeData.department}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"salary\"\r\n                    placeholder=\"Salary\"\r\n                    value={employeeData.salary}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={employeeData.email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={employeeData.password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <label>\r\n                    Role:\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"role\"\r\n                        checked={employeeData.role === 1}\r\n                        onChange={handleRoleChange}\r\n                    />\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    ref={imageInputRef}\r\n                    onChange={handleImageChange}\r\n                />\r\n                <button onClick={handleUpdateEmployee}>Update Employee</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateEmployeePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}